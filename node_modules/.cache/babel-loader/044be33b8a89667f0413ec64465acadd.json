{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport productReducer from './productSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  products: productReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["/Users/jesukoseemani/Documents/GitHub/Carting/src/redux/store.ts"],"names":["configureStore","combineReducers","productReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","products","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SACCC,YADD,EAECC,cAFD,EAGCC,KAHD,EAICC,SAJD,EAKCC,KALD,EAMCC,OAND,EAOCC,KAPD,EAQCC,QARD,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,GAAG,EAAE,MADgB;AAErBC,EAAAA,OAAO,EAAE,CAFY;AAGrBH,EAAAA;AAHqB,CAAtB;AAMA,MAAMI,WAAW,GAAGd,eAAe,CAAC;AAAEe,EAAAA,QAAQ,EAAEd;AAAZ,CAAD,CAAnC;AAEA,MAAMe,gBAAgB,GAAGb,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMG,KAAK,GAAGlB,cAAc,CAAC;AACnCmB,EAAAA,OAAO,EAAEF,gBAD0B;AAEnCG,EAAAA,UAAU,EAAGC,oBAAD,IACXA,oBAAoB,CAAC;AACpBC,IAAAA,iBAAiB,EAAE;AAClBC,MAAAA,cAAc,EAAE,CAAClB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADE;AADC,GAAD;AAHc,CAAD,CAA5B;AAUP,OAAO,IAAIc,SAAS,GAAGrB,YAAY,CAACe,KAAD,CAA5B","sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport productReducer from './productSlice';\nimport {\n\tpersistStore,\n\tpersistReducer,\n\tFLUSH,\n\tREHYDRATE,\n\tPAUSE,\n\tPERSIST,\n\tPURGE,\n\tREGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n\tkey: 'root',\n\tversion: 1,\n\tstorage,\n};\n\nconst rootReducer = combineReducers({ products: productReducer });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n\treducer: persistedReducer,\n\tmiddleware: (getDefaultMiddleware) =>\n\t\tgetDefaultMiddleware({\n\t\t\tserializableCheck: {\n\t\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\t\t\t},\n\t\t}),\n});\n\nexport let persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}