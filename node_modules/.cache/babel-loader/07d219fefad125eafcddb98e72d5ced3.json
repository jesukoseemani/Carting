{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  products: [],\n  cartItems: [],\n  bookmark: [],\n  trigger: false\n};\nexport const productReducer = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    addToProduct: (state, action) => {\n      state.products = action.payload;\n    },\n    addToCart: (state, action) => {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      let newCart = [...state.cartItems];\n\n      if (itemIndex >= 0) {\n        newCart[itemIndex].quantity += 1;\n      } else {\n        newCart = [...state.cartItems, action.payload];\n      }\n\n      state.cartItems = newCart;\n    },\n    removeFromCart: (state, action) => {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      let newCart = [...state.cartItems];\n      newCart[itemIndex].content = false;\n\n      if (itemIndex >= 0) {\n        if (newCart[itemIndex].quantity > 1) {\n          newCart[itemIndex].quantity -= 1;\n        } else {\n          newCart.splice(itemIndex, 1);\n        }\n      } else {\n        console.warn('Item Not Found');\n      }\n\n      state.cartItems = newCart;\n    },\n    addToBookmark: (state, action) => {\n      state.bookmark = [...state.bookmark, action.payload];\n    },\n    removeFromBookmark: (state, action) => {\n      const itemIndex = state.bookmark.findIndex(bookItem => bookItem.id === action.payload.id);\n      state.bookmark.splice(itemIndex, 1);\n    },\n    navInOut: (state, action) => {\n      state.trigger = action.payload;\n    }\n  }\n});\nexport const {\n  addToProduct,\n  addToCart,\n  removeFromCart,\n  addToBookmark,\n  removeFromBookmark\n} = productReducer.actions;\nexport default productReducer.reducer;","map":{"version":3,"sources":["/Users/jesukoseemani/Documents/cart app/carting/src/redux/productSlice.js"],"names":["createSlice","initialState","products","cartItems","bookmark","trigger","productReducer","name","reducers","addToProduct","state","action","payload","addToCart","itemIndex","findIndex","cartItem","id","newCart","quantity","removeFromCart","content","splice","console","warn","addToBookmark","removeFromBookmark","bookItem","navInOut","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,OAAO,EAAE;AAJW,CAArB;AAOA,OAAO,MAAMC,cAAc,GAAGN,WAAW,CAAC;AACzCO,EAAAA,IAAI,EAAE,UADmC;AAEzCN,EAAAA,YAFyC;AAGzCO,EAAAA,QAAQ,EAAE;AACTC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;AACA,KAHQ;AAITC,IAAAA,SAAS,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAMG,SAAS,GAAGJ,KAAK,CAACP,SAAN,CAAgBY,SAAhB,CAChBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACC,OAAP,CAAeK,EAD5B,CAAlB;AAGA,UAAIC,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACP,SAAV,CAAd;;AACA,UAAIW,SAAS,IAAI,CAAjB,EAAoB;AACnBI,QAAAA,OAAO,CAACJ,SAAD,CAAP,CAAmBK,QAAnB,IAA+B,CAA/B;AACA,OAFD,MAEO;AACND,QAAAA,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACP,SAAV,EAAqBQ,MAAM,CAACC,OAA5B,CAAV;AACA;;AAEDF,MAAAA,KAAK,CAACP,SAAN,GAAkBe,OAAlB;AACA,KAhBQ;AAiBTE,IAAAA,cAAc,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAClC,YAAMG,SAAS,GAAGJ,KAAK,CAACP,SAAN,CAAgBY,SAAhB,CAChBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACC,OAAP,CAAeK,EAD5B,CAAlB;AAIA,UAAIC,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACP,SAAV,CAAd;AACAe,MAAAA,OAAO,CAACJ,SAAD,CAAP,CAAmBO,OAAnB,GAA6B,KAA7B;;AACA,UAAIP,SAAS,IAAI,CAAjB,EAAoB;AACnB,YAAII,OAAO,CAACJ,SAAD,CAAP,CAAmBK,QAAnB,GAA8B,CAAlC,EAAqC;AACpCD,UAAAA,OAAO,CAACJ,SAAD,CAAP,CAAmBK,QAAnB,IAA+B,CAA/B;AACA,SAFD,MAEO;AACND,UAAAA,OAAO,CAACI,MAAR,CAAeR,SAAf,EAA0B,CAA1B;AACA;AACD,OAND,MAMO;AACNS,QAAAA,OAAO,CAACC,IAAR,CAAa,gBAAb;AACA;;AAEDd,MAAAA,KAAK,CAACP,SAAN,GAAkBe,OAAlB;AACA,KAnCQ;AAoCTO,IAAAA,aAAa,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACN,QAAN,GAAiB,CAAC,GAAGM,KAAK,CAACN,QAAV,EAAoBO,MAAM,CAACC,OAA3B,CAAjB;AACA,KAtCQ;AAuCTc,IAAAA,kBAAkB,EAAE,CAAChB,KAAD,EAAQC,MAAR,KAAmB;AACtC,YAAMG,SAAS,GAAGJ,KAAK,CAACN,QAAN,CAAeW,SAAf,CAChBY,QAAD,IAAcA,QAAQ,CAACV,EAAT,KAAgBN,MAAM,CAACC,OAAP,CAAeK,EAD5B,CAAlB;AAIAP,MAAAA,KAAK,CAACN,QAAN,CAAekB,MAAf,CAAsBR,SAAtB,EAAiC,CAAjC;AACA,KA7CQ;AA8CTc,IAAAA,QAAQ,EAAE,CAAClB,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACC,OAAvB;AACA;AAhDQ;AAH+B,CAAD,CAAlC;AAuDP,OAAO,MAAM;AACZH,EAAAA,YADY;AAEZI,EAAAA,SAFY;AAGZO,EAAAA,cAHY;AAIZK,EAAAA,aAJY;AAKZC,EAAAA;AALY,IAMTpB,cAAc,CAACuB,OANZ;AAOP,eAAevB,cAAc,CAACwB,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n\tproducts: [],\n\tcartItems: [],\n\tbookmark: [],\n\ttrigger: false,\n};\n\nexport const productReducer = createSlice({\n\tname: 'products',\n\tinitialState,\n\treducers: {\n\t\taddToProduct: (state, action) => {\n\t\t\tstate.products = action.payload;\n\t\t},\n\t\taddToCart: (state, action) => {\n\t\t\tconst itemIndex = state.cartItems.findIndex(\n\t\t\t\t(cartItem) => cartItem.id === action.payload.id\n\t\t\t);\n\t\t\tlet newCart = [...state.cartItems];\n\t\t\tif (itemIndex >= 0) {\n\t\t\t\tnewCart[itemIndex].quantity += 1;\n\t\t\t} else {\n\t\t\t\tnewCart = [...state.cartItems, action.payload];\n\t\t\t}\n\n\t\t\tstate.cartItems = newCart;\n\t\t},\n\t\tremoveFromCart: (state, action) => {\n\t\t\tconst itemIndex = state.cartItems.findIndex(\n\t\t\t\t(cartItem) => cartItem.id === action.payload.id\n\t\t\t);\n\n\t\t\tlet newCart = [...state.cartItems];\n\t\t\tnewCart[itemIndex].content = false;\n\t\t\tif (itemIndex >= 0) {\n\t\t\t\tif (newCart[itemIndex].quantity > 1) {\n\t\t\t\t\tnewCart[itemIndex].quantity -= 1;\n\t\t\t\t} else {\n\t\t\t\t\tnewCart.splice(itemIndex, 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('Item Not Found');\n\t\t\t}\n\n\t\t\tstate.cartItems = newCart;\n\t\t},\n\t\taddToBookmark: (state, action) => {\n\t\t\tstate.bookmark = [...state.bookmark, action.payload];\n\t\t},\n\t\tremoveFromBookmark: (state, action) => {\n\t\t\tconst itemIndex = state.bookmark.findIndex(\n\t\t\t\t(bookItem) => bookItem.id === action.payload.id\n\t\t\t);\n\n\t\t\tstate.bookmark.splice(itemIndex, 1);\n\t\t},\n\t\tnavInOut: (state, action) => {\n\t\t\tstate.trigger = action.payload;\n\t\t},\n\t},\n});\n\nexport const {\n\taddToProduct,\n\taddToCart,\n\tremoveFromCart,\n\taddToBookmark,\n\tremoveFromBookmark,\n} = productReducer.actions;\nexport default productReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}